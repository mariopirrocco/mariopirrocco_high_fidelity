{"ast":null,"code":"var _jsxFileName = \"/Library/WebServer/Documents/coderhouse/_react/mariopirrocco_high_fidelity/src/components/ItemListContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport ItemList from './ItemList';\nimport discos from '../discosFull.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ItemListContainer = () => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [productos, setProductos] = useState([]);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const promesa = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        console.log(id);\n\n        if (id === 'cds') {\n          console.log(`soy ${id}`);\n        }\n\n        const filtered = discos.filter((disco, index) => {\n          return disco.artist == 'INXS';\n        });\n        console.log(filtered);\n        resolve(filtered);\n      }, 2000);\n    });\n    promesa.then(data => {\n      setProductos(filtered);\n    }).catch(error => {\n      toast.error('hubo un error en la carga del catálogo');\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item-list-container\",\n    children: /*#__PURE__*/_jsxDEV(ItemList, {\n      discos: productos,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ItemListContainer, \"omMMVsL9LV4dCcH6ymKjVgcRqQw=\", false, function () {\n  return [useParams];\n});\n\n_c = ItemListContainer;\nexport default ItemListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemListContainer\");","map":{"version":3,"sources":["/Library/WebServer/Documents/coderhouse/_react/mariopirrocco_high_fidelity/src/components/ItemListContainer.js"],"names":["useState","useEffect","useParams","toast","ItemList","discos","ItemListContainer","loading","setLoading","productos","setProductos","id","promesa","Promise","resolve","reject","setTimeout","console","log","filtered","filter","disco","index","artist","then","data","catch","error","finally"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAGA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAE/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAACW,IAAAA;AAAD,MAAOT,SAAS,EAAtB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEf,UAAMW,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAChDC,MAAAA,UAAU,CAAC,MAAM;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYP,EAAZ;;AACA,YAAIA,EAAE,KAAK,KAAX,EAAkB;AACjBM,UAAAA,OAAO,CAACC,GAAR,CAAa,OAAMP,EAAG,EAAtB;AACA;;AAED,cAAMQ,QAAQ,GAAGd,MAAM,CAACe,MAAP,CAAc,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAChD,iBAAOD,KAAK,CAACE,MAAN,IAAgB,MAAvB;AACA,SAFgB,CAAjB;AAGAN,QAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AAEAL,QAAAA,OAAO,CAACK,QAAD,CAAP;AACA,OAZS,EAYP,IAZO,CAAV;AAaA,KAde,CAAhB;AAgBAP,IAAAA,OAAO,CAACY,IAAR,CAAcC,IAAD,IAAU;AACtBf,MAAAA,YAAY,CAACS,QAAD,CAAZ;AACA,KAFD,EAGCO,KAHD,CAGQC,KAAD,IAAW;AACjBxB,MAAAA,KAAK,CAACwB,KAAN,CAAY,wCAAZ;AACA,KALD,EAMCC,OAND,CAMS,MAAM;AACdpB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,KARD;AASA,GA3BQ,EA2BN,CAACG,EAAD,CA3BM,CAAT;AA8BA,sBACC;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,2BACC,QAAC,QAAD;AAAU,MAAA,MAAM,EAAEF,SAAlB;AAA6B,MAAA,OAAO,EAAEF;AAAtC;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAzCD;;GAAMD,iB;UAIQJ,S;;;KAJRI,iB;AA2CN,eAAeA,iBAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport ItemList from './ItemList'\nimport discos from '../discosFull.json'\n\n\nconst ItemListContainer = () => {  \n\n\tconst [loading, setLoading] = useState(true)\n\tconst [productos, setProductos] = useState([])\n\tconst {id} = useParams()\n\n\tuseEffect(() => {\n\n\t\tconst promesa = new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tconsole.log(id)\n\t\t\t\tif (id === 'cds') {\n\t\t\t\t\tconsole.log(`soy ${id}`)\n\t\t\t\t}\n\n\t\t\t\tconst filtered = discos.filter((disco, index) => {\n\t\t\t\t\treturn disco.artist == 'INXS'\n\t\t\t\t})\n\t\t\t\tconsole.log(filtered)\n\t\n\t\t\t\tresolve(filtered)\n\t\t\t}, 2000)\n\t\t})\n\t\t\n\t\tpromesa.then((data) => {\n\t\t\tsetProductos(filtered)\n\t\t})\n\t\t.catch((error) => {\n\t\t\ttoast.error('hubo un error en la carga del catálogo')\n\t\t})\n\t\t.finally(() => {\n\t\t\tsetLoading(false)\n\t\t})\n\t}, [id])\n\t\n\n\treturn(\n\t\t<div className=\"item-list-container\">\n\t\t\t<ItemList discos={productos} loading={loading} />\n\t\t</div>\n\t)\n}\n\nexport default ItemListContainer\n\n"]},"metadata":{},"sourceType":"module"}