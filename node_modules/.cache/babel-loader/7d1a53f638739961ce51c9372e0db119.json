{"ast":null,"code":"var _jsxFileName = \"/Library/WebServer/Documents/coderhouse/_react/MyApp/src/components/ItemDetailContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport ItemDetail from './ItemDetail';\nimport discos from '../discosFull.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ItemDetailContainer = () => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [productos, setProductos] = useState([]);\n  const {\n    id\n  } = useParams();\n  let selected = [];\n  useEffect(() => {\n    const promesa = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        selected = discos.filter(disco => {\n          return disco.id;\n        });\n        resolve(selected);\n      }, 2000);\n    });\n    promesa.then(data => {\n      setProductos(data);\n    }).catch(error => {\n      toast.error('hubo un error en la carga del catálogo');\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item-list-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"record-card\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"loading-content\",\n        children: \"Cargando Disco\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }, this) : /*#__PURE__*/_jsxDEV(ItemDetail, {\n        disco: productos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 70\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ItemDetailContainer, \"omMMVsL9LV4dCcH6ymKjVgcRqQw=\", false, function () {\n  return [useParams];\n});\n\n_c = ItemDetailContainer;\nexport default ItemDetailContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemDetailContainer\");","map":{"version":3,"sources":["/Library/WebServer/Documents/coderhouse/_react/MyApp/src/components/ItemDetailContainer.js"],"names":["useState","useEffect","useParams","toast","ItemDetail","discos","ItemDetailContainer","loading","setLoading","productos","setProductos","id","selected","promesa","Promise","resolve","reject","setTimeout","filter","disco","then","data","catch","error","finally"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAGA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAEjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAACW,IAAAA;AAAD,MAAOT,SAAS,EAAtB;AACA,MAAIU,QAAQ,GAAG,EAAf;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMY,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAChDC,MAAAA,UAAU,CAAC,MAAM;AAEhBL,QAAAA,QAAQ,GAAGP,MAAM,CAACa,MAAP,CAAeC,KAAD,IAAW;AACnC,iBAAOA,KAAK,CAACR,EAAb;AACA,SAFU,CAAX;AAIAI,QAAAA,OAAO,CAACH,QAAD,CAAP;AACA,OAPS,EAOP,IAPO,CAAV;AAQA,KATe,CAAhB;AAWAC,IAAAA,OAAO,CAACO,IAAR,CAAcC,IAAD,IAAU;AACtBX,MAAAA,YAAY,CAACW,IAAD,CAAZ;AAEA,KAHD,EAICC,KAJD,CAIQC,KAAD,IAAW;AACjBpB,MAAAA,KAAK,CAACoB,KAAN,CAAY,wCAAZ;AACA,KAND,EAOCC,OAPD,CAOS,MAAM;AACdhB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,KATD;AAWA,GAvBQ,EAuBN,CAACG,EAAD,CAvBM,CAAT;AA0BA,sBAEC;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,2BACC;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACEJ,OAAO,gBAAG;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAyD,QAAC,UAAD;AAAY,QAAA,KAAK,EAAEE;AAAnB;AAAA;AAAA;AAAA;AAAA;AADlE;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UAFD;AAQA,CAzCD;;GAAMH,mB;UAIQJ,S;;;KAJRI,mB;AA2CN,eAAeA,mBAAf","sourcesContent":["import {useState, useEffect} from 'react'\nimport { useParams } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport ItemDetail from './ItemDetail'\nimport discos from '../discosFull.json'\n\n\nconst ItemDetailContainer = () => {  \n\n\tconst [loading, setLoading] = useState(true)\n\tconst [productos, setProductos] = useState([])\n\tconst {id} = useParams()\n\tlet selected = []\n\t\n\tuseEffect(() => {\n\t\tconst promesa = new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\t\n\t\t\t\tselected = discos.filter((disco) => {\n\t\t\t\t\treturn disco.id\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tresolve(selected)\n\t\t\t}, 2000)\n\t\t})\n\t\t\n\t\tpromesa.then((data) => {\n\t\t\tsetProductos(data)\n\t\t\t\n\t\t})\n\t\t.catch((error) => {\n\t\t\ttoast.error('hubo un error en la carga del catálogo')\n\t\t})\n\t\t.finally(() => {\t\n\t\t\tsetLoading(false)\n\t\t})\t\t\n\t\t\n\t}, [id])\n\t\n\n\treturn(\n\n\t\t<div className=\"item-list-container\">\n\t\t\t<div className=\"record-card\">\t\t\t\t\n\t\t\t\t{loading ? <h4 className='loading-content'>Cargando Disco</h4> : <ItemDetail disco={productos} />}\n\t\t\t</div>\t\t\t\n\t\t</div>\n\t)\n}\n\nexport default ItemDetailContainer\n\n"]},"metadata":{},"sourceType":"module"}