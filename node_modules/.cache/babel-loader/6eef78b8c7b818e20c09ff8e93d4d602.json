{"ast":null,"code":"var _jsxFileName = \"/Library/WebServer/Documents/coderhouse/_react/mariopirrocco_high_fidelity/src/components/ItemListContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport ItemList from './ItemList';\nimport discos from '../discosFull.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ItemListContainer = _ref => {\n  _s();\n\n  let {\n    type\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  const [productos, setProductos] = useState([]);\n  const {\n    id\n  } = useParams();\n  let filtered = [];\n  console.log(type);\n  useEffect(() => {\n    const promesa = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (id === 'vinilos') {\n          filtered = discos.filter(disco => {\n            return disco.format === 'vinyl';\n          });\n        } else if (id === 'cds') {\n          filtered = discos.filter(disco => {\n            return disco.format === 'cd';\n          });\n        } else if (id === 'cassettes') {\n          filtered = discos.filter(disco => {\n            return disco.format === 'cassette';\n          });\n        } else if (id === undefined) {\n          filtered = discos;\n        } else {\n          filtered = discos.filter(disco => {\n            return disco.id === id;\n          });\n        }\n\n        resolve(filtered);\n      }, 2000);\n    });\n    promesa.then(data => {\n      setProductos(filtered);\n    }).catch(error => {\n      toast.error('hubo un error en la carga del catálogo');\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item-list-container\",\n    children: /*#__PURE__*/_jsxDEV(ItemList, {\n      discos: productos,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ItemListContainer, \"omMMVsL9LV4dCcH6ymKjVgcRqQw=\", false, function () {\n  return [useParams];\n});\n\n_c = ItemListContainer;\nexport default ItemListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemListContainer\");","map":{"version":3,"sources":["/Library/WebServer/Documents/coderhouse/_react/mariopirrocco_high_fidelity/src/components/ItemListContainer.js"],"names":["useState","useEffect","useParams","toast","ItemList","discos","ItemListContainer","type","loading","setLoading","productos","setProductos","id","filtered","console","log","promesa","Promise","resolve","reject","setTimeout","filter","disco","format","undefined","then","data","catch","error","finally"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAGA,MAAMC,iBAAiB,GAAG,QAAY;AAAA;;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;AAErC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAACY,IAAAA;AAAD,MAAOV,SAAS,EAAtB;AACA,MAAIW,QAAQ,GAAG,EAAf;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AAGAN,EAAAA,SAAS,CAAC,MAAM;AAEf,UAAMe,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAEhDC,MAAAA,UAAU,CAAC,MAAM;AAChB,YAAGR,EAAE,KAAK,SAAV,EAAqB;AACpBC,UAAAA,QAAQ,GAAGR,MAAM,CAACgB,MAAP,CAAeC,KAAD,IAAW;AACnC,mBAAOA,KAAK,CAACC,MAAN,KAAiB,OAAxB;AACA,WAFU,CAAX;AAGA,SAJD,MAIO,IAAGX,EAAE,KAAI,KAAT,EAAgB;AACtBC,UAAAA,QAAQ,GAAGR,MAAM,CAACgB,MAAP,CAAeC,KAAD,IAAW;AACnC,mBAAOA,KAAK,CAACC,MAAN,KAAiB,IAAxB;AACA,WAFU,CAAX;AAGA,SAJM,MAIA,IAAGX,EAAE,KAAI,WAAT,EAAsB;AAC5BC,UAAAA,QAAQ,GAAGR,MAAM,CAACgB,MAAP,CAAeC,KAAD,IAAW;AAEnC,mBAAOA,KAAK,CAACC,MAAN,KAAiB,UAAxB;AACA,WAHU,CAAX;AAIA,SALM,MAKA,IAAGX,EAAE,KAAKY,SAAV,EAAqB;AAC3BX,UAAAA,QAAQ,GAAGR,MAAX;AACA,SAFM,MAEA;AACNQ,UAAAA,QAAQ,GAAGR,MAAM,CAACgB,MAAP,CAAeC,KAAD,IAAW;AACnC,mBAAOA,KAAK,CAACV,EAAN,KAAaA,EAApB;AACA,WAFU,CAAX;AAGA;;AAGDM,QAAAA,OAAO,CAACL,QAAD,CAAP;AACA,OAxBS,EAwBP,IAxBO,CAAV;AAyBA,KA3Be,CAAhB;AA6BAG,IAAAA,OAAO,CAACS,IAAR,CAAcC,IAAD,IAAU;AACtBf,MAAAA,YAAY,CAACE,QAAD,CAAZ;AACA,KAFD,EAGCc,KAHD,CAGQC,KAAD,IAAW;AACjBzB,MAAAA,KAAK,CAACyB,KAAN,CAAY,wCAAZ;AACA,KALD,EAMCC,OAND,CAMS,MAAM;AACdpB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,KARD;AASA,GAxCQ,EAwCN,CAACG,EAAD,CAxCM,CAAT;AA2CA,sBACC;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,2BACC,QAAC,QAAD;AAAU,MAAA,MAAM,EAAEF,SAAlB;AAA6B,MAAA,OAAO,EAAEF;AAAtC;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CA1DD;;GAAMF,iB;UAIQJ,S;;;KAJRI,iB;AA4DN,eAAeA,iBAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport ItemList from './ItemList'\nimport discos from '../discosFull.json'\n\n\nconst ItemListContainer = ({type}) => {  \n\n\tconst [loading, setLoading] = useState(true)\n\tconst [productos, setProductos] = useState([])\n\tconst {id} = useParams()\n\tlet filtered = []\n\t\n\tconsole.log(type)\n\n\n\tuseEffect(() => {\n\n\t\tconst promesa = new Promise((resolve, reject) => {\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tif(id === 'vinilos') {\n\t\t\t\t\tfiltered = discos.filter((disco) => {\n\t\t\t\t\t\treturn disco.format === 'vinyl'\n\t\t\t\t\t})\n\t\t\t\t} else if(id ==='cds') {\n\t\t\t\t\tfiltered = discos.filter((disco) => {\n\t\t\t\t\t\treturn disco.format === 'cd'\n\t\t\t\t\t})\n\t\t\t\t} else if(id ==='cassettes') {\n\t\t\t\t\tfiltered = discos.filter((disco) => {\n\n\t\t\t\t\t\treturn disco.format === 'cassette'\n\t\t\t\t\t})\n\t\t\t\t}\telse if(id === undefined) {\n\t\t\t\t\tfiltered = discos\n\t\t\t\t} else {\n\t\t\t\t\tfiltered = discos.filter((disco) => {\n\t\t\t\t\t\treturn disco.id === id\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t\n\t\n\t\t\t\tresolve(filtered)\n\t\t\t}, 2000)\n\t\t})\n\t\t\n\t\tpromesa.then((data) => {\n\t\t\tsetProductos(filtered)\n\t\t})\n\t\t.catch((error) => {\n\t\t\ttoast.error('hubo un error en la carga del catálogo')\n\t\t})\n\t\t.finally(() => {\n\t\t\tsetLoading(false)\n\t\t})\n\t}, [id])\n\t\n\n\treturn(\n\t\t<div className=\"item-list-container\">\n\t\t\t<ItemList discos={productos} loading={loading} />\n\t\t</div>\n\t)\n}\n\nexport default ItemListContainer\n\n"]},"metadata":{},"sourceType":"module"}